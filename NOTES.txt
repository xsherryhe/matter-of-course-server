// TO DO: Assignment submissions
--Buttons: 
  -Add to My Assignments -> assignment_submissions#create
  -Start Assignment (assignment submission resource create form)
      --Save Draft
      --Submit
--my assignments page
--delete assignment submission (incomplete or complete)

MATTER OF COURSE
User (for logged in users)
//-devise
//-username
//-password
//-email
//-has one profile
//-has many hosted courses class name Course
//-has and belongs to many instructed courses class name Course
//-has many sent instruction invitations
//-has many received instruction invitations
//-has many enrollments, foreign key student_id
//-has many enrolled courses through enrollments source course
-has many assignment submissions
  -foreign key student_id
  -created when student either adds to 'my assignments', saves and doesn't submit, or submits assignment
  -"student" can be instructor or host as well

Profile
-avatar
//-first_name
//-middle_name
//-last_name
//-belongs to user

Course
-thumbnail
//-title
//-description
//-enum pending/open/closed
//-belongs to creator class name User
//-has and belongs to many instructors class name User (auto add creator as instructor)
//-has many instruction invitations
//-has many enrollments
//-has many students through enrollments class name User
//-has many lessons
-has many posts as postable

//InstructionInvitation
//-enum pending accepted
//-belongs to course
//-belongs to sender, class name User
//-belongs to recipient, class name User
//-once accepted, recipient is instructor of course

Enrollment
//-belongs to course
//-belongs to student class name User

Lesson
//-title
//-order
//-belongs to course 
//-has many lesson_sections
-has many assignments
-has many posts as postable

LessonSection
//-title
//-body
//-order
//-belongs to lesson
-has many media (active storage/cloudinary)

Media
-belongs to lesson_section

Assignment
//-title
//-body/instructions
//-order
//-belongs to lesson
-has many assignment submissions

AssignmentSubmission
//-enum incomplete complete
//-belongs to assignment
  -optional so that submissions still exist for the student even if the course/assignment is deleted
//-belongs to student, class name User
//-body
-has many files (active storage/cloudinary)
-has many comments as reactable

Message
-has and belongs to many replies, class name Message
-enum unread read
-sender class name User
-recipient class name User
-body
-send email with message body as parameter through Action Mailer

Post
-belongs to postable
-belongs to creator class name User
-has many comments as reactable

Comment
-belongs to reactable
-belongs to creator class name User
-has many comments as reactable
-body

// TO DO: Add "hooks" for non-logged in users to sign in or sign up (e.g. to enroll in a course)
// TO DO: Prev lesson / next lesson buttons on lesson pages
// TO DO: Error catching from fetcher
// TO DO: Set default_url_options in production
// TO DO: Other devise routes (e.g. edit account, forgot password)
  //for destroy user, make them change the host of the courses and show error if hosts are not changed (destroy returns false)
// TO DO: Delete unused devise views and routes
// TO DO: Fade in animation of homepage
// TO DO: Password validation
// TO DO: Subject/category tags for courses
// TO DO: Page scrolling through items with 50 or more
// TO DO: Testing
// TO DO: Websocket notifications
